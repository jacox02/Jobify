[{"C:\\proyectosWeb\\Jobify\\src\\index.js":"1","C:\\proyectosWeb\\Jobify\\src\\App.js":"2","C:\\proyectosWeb\\Jobify\\src\\Components\\NavbarComponent.js":"3","C:\\proyectosWeb\\Jobify\\src\\Components\\WDetailsComponent.js":"4","C:\\proyectosWeb\\Jobify\\src\\Components\\JobsComponent.js":"5","C:\\proyectosWeb\\Jobify\\src\\Components\\CategoryComponent.js":"6","C:\\proyectosWeb\\Jobify\\src\\Components\\AllJobsCategory.js":"7","C:\\proyectosWeb\\Jobify\\src\\Components\\PostJobComponent.js":"8"},{"size":514,"mtime":1612487027368,"results":"9","hashOfConfig":"10"},{"size":1412,"mtime":1612487027361,"results":"11","hashOfConfig":"10"},{"size":2955,"mtime":1612898148595,"results":"12","hashOfConfig":"10"},{"size":1624,"mtime":1612487027364,"results":"13","hashOfConfig":"10"},{"size":4599,"mtime":1612739593601,"results":"14","hashOfConfig":"10"},{"size":2891,"mtime":1612487027362,"results":"15","hashOfConfig":"10"},{"size":1413,"mtime":1612487027361,"results":"16","hashOfConfig":"10"},{"size":2533,"mtime":1612897323204,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1ypozsc",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},"C:\\proyectosWeb\\Jobify\\src\\index.js",[],["37","38"],"C:\\proyectosWeb\\Jobify\\src\\App.js",[],"C:\\proyectosWeb\\Jobify\\src\\Components\\NavbarComponent.js",[],"C:\\proyectosWeb\\Jobify\\src\\Components\\WDetailsComponent.js",[],"C:\\proyectosWeb\\Jobify\\src\\Components\\JobsComponent.js",["39","40"],"import React, { Component } from \"react\";\r\nimport { Card, Button, Form, FormControl } from \"react-bootstrap\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport \"../style/styleJob.css\";\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport {fabrowser} from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst axios = require(\"axios\");\r\nexport default class JobsComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      works: [],\r\n      categories: [],\r\n      wcategory: [],\r\n      offset: 0,\r\n      tableData: [],\r\n      currentCategory: 1,\r\n      orgtableData: [],\r\n      perPage: 10,\r\n      currentPage: 0,\r\n    };\r\n    this.handlePageClick = this.handlePageClick.bind(this);\r\n  }\r\n\r\n  getWorks() {\r\n    axios\r\n      .get(`http://localhost:3050/Works/${this.state.currentCategory}/List`)\r\n      .then((response) => {\r\n        this.setState({ works: response.data });\r\n        const data = response.data;\r\n        const slice = data.slice(\r\n          this.state.offset,\r\n          this.state.offset + this.state.perPage\r\n        );\r\n\r\n        this.setState({\r\n          pageCount: Math.ceil(data.length / this.state.perPage),\r\n          orgtableData: response.data,\r\n          works: slice,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(`There was an error: ${error}`);\r\n      });\r\n  }\r\n  getCategories() {\r\n    axios\r\n      .get(\"http://localhost:3050/Works/Categories\")\r\n      .then((response) => {\r\n        this.setState({ categories: response.data });\r\n      })\r\n      .catch((error) => {\r\n        console.log(`There was an error: ${error}`);\r\n      });\r\n  }\r\n  handlePageClick = (e) => {\r\n    const selectedPage = e.selected;\r\n    const offset = selectedPage * this.state.perPage;\r\n    this.setState(\r\n      {\r\n        currentPage: selectedPage,\r\n        offset: offset,\r\n      },\r\n      () => {\r\n        this.loadMoreData();\r\n      }\r\n    );\r\n  };\r\n  loadMoreData() {\r\n    const data = this.state.orgtableData;\r\n    const slice = data.slice(\r\n      this.state.offset,\r\n      this.state.offset + this.state.perPage\r\n    );\r\n    this.setState({\r\n      pageCount: Math.ceil(data.length / this.state.perPage),\r\n      works: slice,\r\n    });\r\n  }\r\n  getCategoryJobs(categoryID) {\r\n    console.log(`This is the ctegory obtained from the dropdown${categoryID}`);\r\n    console.log(this.state.currentCategory);\r\n    axios.get(`http://localhost:3050/Works/${categoryID}/List`).then((res) => {\r\n      console.log(res);\r\n    });\r\n    this.renderJobs();\r\n    console.log(this.state.works);\r\n  }\r\n  componentDidMount() {\r\n    this.getWorks();\r\n    this.getCategories();\r\n    this.renderJobs();\r\n  }\r\n  renderJobs() {\r\n    return this.state.works.map((work) => {\r\n      return (\r\n        <div key={work.Work_ID}>\r\n          <Card className=\"Job\">\r\n     <Card.Header>{work.Work_Title}</Card.Header>\r\n     <Card.Body>\r\n     <Card.Title>{work.Company_Name}</Card.Title>\r\n    <Card.Text>\r\n      {work.Location}\r\n      </Card.Text>\r\n    <Button variant=\"primary\" href={`/Works/${work.Work_ID}/Details`}>Ver mas</Button>\r\n  </Card.Body>\r\n</Card>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      \r\n      <div className=\"padre\">\r\n        <Form inline className=\"Busqueda\">\r\n      <FormControl type=\"text\" placeholder=\"Search\" />\r\n      <Button variant=\"outline-primary\">Search</Button>\r\n    </Form>\r\n        <div className=\"categoria\">\r\n          <select name=\"Categoria\" className=\"form-control\">\r\n            {this.state.categories.map((cat) => (\r\n              <option\r\n                key={cat.Category_ID}\r\n                value={cat.Category_Name}\r\n                onClick={() => {\r\n                  this.setState({ currentCategory: cat.Category_ID });\r\n                  this.getWorks();\r\n                  this.getCategoryJobs(cat.Category_ID);\r\n                  this.renderJobs();\r\n                }}\r\n              >\r\n                {cat.Category_Name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"pt-2\">{this.renderJobs()}</div>\r\n\r\n        <ReactPaginate\r\n          previousLabel={\"prev\"}\r\n          nextLabel={\"next\"}\r\n          breakLabel={\"...\"}\r\n          breakClassName={\"break-me\"}\r\n          pageCount={this.state.pageCount}\r\n          marginPagesDisplayed={2}\r\n          pageRangeDisplayed={5}\r\n          onPageChange={this.handlePageClick}\r\n          containerClassName={\"pagination\"}\r\n          subContainerClassName={\"pages pagination\"}\r\n          activeClassName={\"active\"}\r\n        />\r\n\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\proyectosWeb\\Jobify\\src\\Components\\CategoryComponent.js",[],"C:\\proyectosWeb\\Jobify\\src\\Components\\AllJobsCategory.js",[],"C:\\proyectosWeb\\Jobify\\src\\Components\\PostJobComponent.js",["41","42"],"import React from \"react\";\r\nimport { Form, Col, Row, Button } from \"react-bootstrap\";\r\nimport { withAuthenticationRequired } from \"@auth0/auth0-react\";\r\nimport \"../style/PostJobStyle.css\"\r\n\r\nexport default function PostJobComponent() {\r\n  return (\r\n    <Form className=\"Post bg-secondary\">\r\n      <Form.Group>\r\n        <Form.Label >\r\n          Work Title\r\n        </Form.Label>\r\n          <Form.Control type=\"Text\" />\r\n      </Form.Group>\r\n\r\n      <Form.Group>\r\n        <Form.Label>\r\n          Position\r\n        </Form.Label>\r\n          <Form.Control type=\"Text\" />\r\n      </Form.Group>\r\n\r\n      <Form.Group>\r\n        <Form.Label>\r\n          Work Keywords\r\n        </Form.Label>\r\n          <Form.Control type=\"Text\" />\r\n      </Form.Group>\r\n\r\n      <Form.Group>\r\n        <Form.Label>\r\n          Location\r\n        </Form.Label>\r\n          <Form.Control type=\"Text\" />\r\n      </Form.Group>\r\n\r\n      <Form.Group>\r\n        <Form.Label>Working Time</Form.Label>\r\n        <Form.Control as=\"select\">\r\n          <option>Full Time</option>\r\n          <option>Parti-Time Job</option>\r\n          <option>Flexitime</option>\r\n          <option>Temporary Job</option>\r\n        </Form.Control>\r\n      </Form.Group>\r\n      <Form.Group>\r\n        <Form.Label>\r\n          Publish Date\r\n        </Form.Label>\r\n          <Form.Control type=\"Text\" />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"formHorizontalEmail\">\r\n        <Form.Label>\r\n          Email\r\n        </Form.Label>\r\n          <Form.Control type=\"Email\" />\r\n      </Form.Group>\r\n\r\n      <Form.Group>\r\n        <Form.Label>\r\n          Apply Method\r\n        </Form.Label>\r\n          <Form.Control type=\"Text\" />\r\n      </Form.Group>\r\n\r\n      <Form.Group>\r\n        <Form.Label>Categoria</Form.Label>\r\n        <Form.Control as=\"select\">\r\n          <option>1</option>\r\n          <option>2</option>\r\n          <option>3</option>\r\n          <option>4</option>\r\n          <option>5</option>\r\n        </Form.Control>\r\n      </Form.Group>\r\n\r\n      <Form.Group>\r\n    <Form.Label>Description</Form.Label>\r\n    <Form.Control as=\"textarea\" rows={3} />\r\n  </Form.Group>\r\n\r\n      <Form.Group as={Row}>\r\n        <Col >\r\n          <Button variant=\"success\"  size=\"lg\" block type=\"submit\">Publicar</Button>\r\n        </Col>\r\n      </Form.Group>\r\n    </Form>\r\n  );\r\n}\r\n{\r\n  /*\r\nexport default withAuthenticationRequired(PostJobComponent, {\r\n  onRedirecting: () => (\r\n    <div>\r\n      Checando credenciales, si no esta loggeado sera redirigido a la pagina de\r\n      login...\r\n    </div>\r\n  ),\r\n});\r\n*/\r\n}\r\n",{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":5,"column":9,"nodeType":"49","messageId":"50","endLine":5,"endColumn":24},{"ruleId":"47","severity":1,"message":"51","line":6,"column":9,"nodeType":"49","messageId":"50","endLine":6,"endColumn":18},{"ruleId":"47","severity":1,"message":"52","line":3,"column":10,"nodeType":"49","messageId":"50","endLine":3,"endColumn":36},{"ruleId":"53","severity":1,"message":"54","line":91,"column":1,"nodeType":"55","messageId":"56","endLine":102,"endColumn":2},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'FontAwesomeIcon' is defined but never used.","Identifier","unusedVar","'fabrowser' is defined but never used.","'withAuthenticationRequired' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-global-assign","no-unsafe-negation"]