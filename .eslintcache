[{"E:\\Dev\\Jobify\\src\\index.js":"1","E:\\Dev\\Jobify\\src\\App.js":"2","E:\\Dev\\Jobify\\src\\Components\\JobsComponent.js":"3","E:\\Dev\\Jobify\\src\\Components\\WDetailsComponent.js":"4","E:\\Dev\\Jobify\\src\\Components\\PostJobComponent.js":"5","E:\\Dev\\Jobify\\src\\Components\\NavbarComponent.js":"6"},{"size":514,"mtime":1612459499505,"results":"7","hashOfConfig":"8"},{"size":991,"mtime":1613005254769,"results":"9","hashOfConfig":"8"},{"size":6927,"mtime":1613015454691,"results":"10","hashOfConfig":"8"},{"size":1753,"mtime":1613015454690,"results":"11","hashOfConfig":"8"},{"size":2154,"mtime":1613005318589,"results":"12","hashOfConfig":"8"},{"size":1225,"mtime":1613015454681,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"logqh2",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Dev\\Jobify\\src\\index.js",[],["29","30"],"E:\\Dev\\Jobify\\src\\App.js",[],"E:\\Dev\\Jobify\\src\\Components\\JobsComponent.js",["31"],"import React, { Component } from \"react\";\r\nimport { Card, Button, Form, FormControl, Row, Col } from \"react-bootstrap\";\r\nimport ReactPaginate from \"react-paginate\";\r\nimport \"../style/styleJob.css\";\r\nimport {\r\n  faHome,\r\n  faBriefcase,\r\n  faMapMarkedAlt,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport \"../style/StylePagination.css\";\r\n\r\nconst axios = require(\"axios\");\r\nexport default class JobsComponent extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      works: [],\r\n      categories: [],\r\n      wcategory: [],\r\n      offset: 0,\r\n      tableData: [],\r\n      currentCategory: 1,\r\n      orgtableData: [],\r\n      perPage: 10,\r\n      currentPage: 0,\r\n    };\r\n    this.handlePageClick = this.handlePageClick.bind(this);\r\n  }\r\n\r\n  getWorks() {\r\n    axios\r\n      .get(`http://localhost:3050/Works/${this.state.currentCategory}/List`)\r\n      .then((response) => {\r\n        this.setState({ works: response.data });\r\n        const data = response.data;\r\n        const slice = data.slice(\r\n          this.state.offset,\r\n          this.state.offset + this.state.perPage\r\n        );\r\n        this.renderJobs(data);\r\n        this.setState({\r\n          pageCount: Math.ceil(data.length / this.state.perPage),\r\n          orgtableData: response.data,\r\n          works: slice,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        console.log(`There was an error: ${error}`);\r\n      });\r\n  }\r\n\r\n  getCategories() {\r\n    axios\r\n      .get(\"http://localhost:3050/Works/Categories\")\r\n      .then((response) => {\r\n        this.setState({ categories: response.data });\r\n      })\r\n      .catch((error) => {\r\n        console.log(`There was an error: ${error}`);\r\n      });\r\n  }\r\n\r\n  handlePageClick = (e) => {\r\n    const selectedPage = e.selected;\r\n    const offset = selectedPage * this.state.perPage;\r\n    this.setState(\r\n      {\r\n        currentPage: selectedPage,\r\n        offset: offset,\r\n      },\r\n      () => {\r\n        this.loadMoreData();\r\n      }\r\n    );\r\n  };\r\n  loadMoreData() {\r\n    const data = this.state.orgtableData;\r\n    const slice = data.slice(\r\n      this.state.offset,\r\n      this.state.offset + this.state.perPage\r\n    );\r\n    this.setState({\r\n      pageCount: Math.ceil(data.length / this.state.perPage),\r\n      works: slice,\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getWorks();\r\n    this.getCategories();\r\n    this.renderJobs();\r\n  }\r\n\r\n  renderJobs() {\r\n    return this.state.works.map((work) => {\r\n      return (\r\n        <div key={work.Work_ID}>\r\n          <Card className=\"Job\">\r\n            <Card.Header className=\"titulo\">\r\n              <FontAwesomeIcon icon={faBriefcase} /> {work.Work_Title}\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Card.Title>{work.Company_Name}</Card.Title>\r\n              <Card.Text>\r\n                <FontAwesomeIcon icon={faMapMarkedAlt} /> {work.Location}\r\n              </Card.Text>\r\n              <Button\r\n                className=\"VerMas\"\r\n                variant=\"outline-secondary\"\r\n                href={`/Works/${work.Work_ID}/Details`}\r\n              >\r\n                Ver mas\r\n              </Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>Category: {this.state.currentCategory}</div>\r\n        <div className=\"pt-2\">\r\n          <div className=\"padre\">\r\n            <Row>\r\n              <Col>\r\n                <Form inline className=\"Busqueda\">\r\n                  <FormControl\r\n                    className=\"BarSearch\"\r\n                    type=\"text\"\r\n                    placeholder=\"Search\"\r\n                  />\r\n                  <Button variant=\"outline-secondary\">Search</Button>\r\n                </Form>\r\n              </Col>\r\n              <Col>\r\n                <div className=\"categoria\">\r\n                  <select name=\"Categoria\" className=\"form-control\">\r\n                    {this.state.categories.map((cat) => (\r\n                      <option\r\n                        key={cat.Category_ID}\r\n                        value={cat.Category_Name}\r\n                        onClick={() => {\r\n                          this.setState({ currentCategory: cat.Category_ID });\r\n                          this.getWorks();\r\n                        }}\r\n                      >\r\n                        {cat.Category_Name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </Col>\r\n            </Row>\r\n            <div className=\"pt-2\">{this.renderJobs()}</div>\r\n            <ReactPaginate\r\n              previousLabel={\"prev\"}\r\n              nextLabel={\"next\"}\r\n              breakLabel={\"...\"}\r\n              breakClassName={\"break-me\"}\r\n              pageCount={this.state.pageCount}\r\n              marginPagesDisplayed={2}\r\n              pageRangeDisplayed={5}\r\n              onPageChange={this.handlePageClick}\r\n              containerClassName={\"pagination\"}\r\n              subContainerClassName={\"pages pagination\"}\r\n              activeClassName={\"active\"}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","E:\\Dev\\Jobify\\src\\Components\\WDetailsComponent.js",[],"E:\\Dev\\Jobify\\src\\Components\\PostJobComponent.js",["32"],"import React from \"react\";\r\nimport { Form, Col, Row, Button } from \"react-bootstrap\";\r\nimport { withAuthenticationRequired } from \"@auth0/auth0-react\";\r\nimport \"../style/PostJobStyle.css\";\r\n\r\nexport default function PostJobComponent() {\r\n  return (\r\n    <Form className=\"Post\">\r\n      <Form.Group>\r\n        <Form.Label>Work Title</Form.Label>\r\n        <Form.Control type=\"Text\" />\r\n      </Form.Group>\r\n\r\n      <Form.Group>\r\n        <Form.Label>Position</Form.Label>\r\n        <Form.Control type=\"Text\" />\r\n      </Form.Group>\r\n\r\n      <Form.Group>\r\n        <Form.Label>Work Keywords</Form.Label>\r\n        <Form.Control type=\"Text\" />\r\n      </Form.Group>\r\n\r\n      <Form.Group>\r\n        <Form.Label>Location</Form.Label>\r\n        <Form.Control type=\"Text\" />\r\n      </Form.Group>\r\n\r\n      <Form.Group>\r\n        <Form.Label>Working Time</Form.Label>\r\n        <Form.Control as=\"select\">\r\n          <option>Full Time</option>\r\n          <option>Parti-Time Job</option>\r\n          <option>Flexitime</option>\r\n          <option>Temporary Job</option>\r\n        </Form.Control>\r\n      </Form.Group>\r\n      <Form.Group>\r\n        <Form.Label>Publish Date</Form.Label>\r\n        <Form.Control type=\"Text\" />\r\n      </Form.Group>\r\n\r\n      <Form.Group controlId=\"formHorizontalEmail\">\r\n        <Form.Label>Email</Form.Label>\r\n        <Form.Control type=\"Email\" />\r\n      </Form.Group>\r\n\r\n      <Form.Group>\r\n        <Form.Label>Apply Method</Form.Label>\r\n        <Form.Control type=\"Text\" />\r\n      </Form.Group>\r\n\r\n      <Form.Group>\r\n        <Form.Label>Categoria</Form.Label>\r\n        <Form.Control as=\"select\">\r\n          <option>1</option>\r\n          <option>2</option>\r\n          <option>3</option>\r\n          <option>4</option>\r\n          <option>5</option>\r\n        </Form.Control>\r\n      </Form.Group>\r\n\r\n      <Form.Group>\r\n        <Form.Label>Description</Form.Label>\r\n        <Form.Control as=\"textarea\" rows={3} />\r\n      </Form.Group>\r\n\r\n      <Form.Group as={Row}>\r\n        <Col>\r\n          <Button variant=\"secondary\" size=\"lg\" block type=\"submit\">\r\n            Publicar\r\n          </Button>\r\n        </Col>\r\n      </Form.Group>\r\n    </Form>\r\n  );\r\n}\r\n","E:\\Dev\\Jobify\\src\\Components\\NavbarComponent.js",["33"],{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","severity":1,"message":"39","line":6,"column":3,"nodeType":"40","messageId":"41","endLine":6,"endColumn":9},{"ruleId":"38","severity":1,"message":"42","line":3,"column":10,"nodeType":"40","messageId":"41","endLine":3,"endColumn":36},{"ruleId":"38","severity":1,"message":"43","line":2,"column":23,"nodeType":"40","messageId":"41","endLine":2,"endColumn":34},"no-native-reassign",["44"],"no-negated-in-lhs",["45"],"no-unused-vars","'faHome' is defined but never used.","Identifier","unusedVar","'withAuthenticationRequired' is defined but never used.","'NavDropdown' is defined but never used.","no-global-assign","no-unsafe-negation"]